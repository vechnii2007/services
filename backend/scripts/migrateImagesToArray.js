/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏–∑ –ø–æ–ª—è image –≤ –º–∞—Å—Å–∏–≤ images
 * –ó–∞–ø—É—Å–∫: node backend/scripts/migrateImagesToArray.js
 */

require("dotenv").config();
const mongoose = require("mongoose");
const Offer = require("../models/Offer");

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
mongoose
  .connect(process.env.MONGODB_URI, {
    useNewUrlParser: true,
    useUnifiedTopology: true,
  })
  .then(() => {
    console.log("‚úÖ Connected to MongoDB");
    migrateImages();
  })
  .catch((err) => {
    console.error("‚ùå Error connecting to MongoDB:", err);
    process.exit(1);
  });

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏–∑ –ø–æ–ª—è image –≤ –º–∞—Å—Å–∏–≤ images
 * –¥–ª—è –≤—Å–µ—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
 */
async function migrateImages() {
  try {
    console.log("üîÑ Starting migration of images...");

    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, —É –∫–æ—Ç–æ—Ä—ã—Ö –µ—Å—Ç—å image, –Ω–æ –Ω–µ—Ç images –∏–ª–∏ images –ø—É—Å—Ç–æ–π
    const offers = await Offer.find({
      image: { $exists: true, $ne: null, $ne: "" },
      $or: [
        { images: { $exists: false } },
        { images: { $size: 0 } },
        { images: null },
      ],
    });

    console.log(`üìä Found ${offers.length} offers to update`);

    let updatedCount = 0;
    let skippedCount = 0;
    let errorCount = 0;

    // –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞–∂–¥–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ
    for (const offer of offers) {
      try {
        if (!offer.image) {
          skippedCount++;
          continue;
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ç–∞–∫–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –º–∞—Å—Å–∏–≤–µ
        if (Array.isArray(offer.images) && offer.images.includes(offer.image)) {
          console.log(
            `‚è≠Ô∏è Skipping offer ${offer._id}: image already in images array`
          );
          skippedCount++;
          continue;
        }

        // –°–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ images, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
        if (!offer.images) {
          offer.images = [];
        }

        // –î–æ–±–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –º–∞—Å—Å–∏–≤
        offer.images.push(offer.image);

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        await offer.save();

        console.log(
          `‚úÖ Updated offer ${offer._id}: added image to images array`
        );
        updatedCount++;
      } catch (err) {
        console.error(`‚ùå Error updating offer ${offer._id}:`, err);
        errorCount++;
      }
    }

    console.log("\nüìù Migration summary:");
    console.log(`‚úÖ Successfully updated: ${updatedCount} offers`);
    console.log(`‚è≠Ô∏è Skipped: ${skippedCount} offers`);
    console.log(`‚ùå Errors: ${errorCount} offers`);

    console.log("\nüéâ Migration completed!");
    process.exit(0);
  } catch (err) {
    console.error("‚ùå Error during migration:", err);
    process.exit(1);
  }
}
